NO_COLOR := \033[0m
ERROR_COLOR := \033[31;01m
OK_COLOR := \033[32;01m
WARN_COLOR := \033[33;01m
INFO_COLOR := \033[34;01m
DISCLAIMER_COLOR := \033[35;01m
HELP_COLOR := \033[36;01m
MSG_PREFIX := ==>
MSG_SUFFIX := ...

DEPENDENCIES := golang.org/x/tools/cmd/cover \
                github.com/golang/lint/golint \
                github.com/client9/misspell/cmd/misspell \
                github.com/gordonklaus/ineffassign \
                github.com/mattn/goveralls \
                github.com/wadey/gocovmerge

## User used for build.
USER := ahmedkamal

## To disable root, you can do "make SUDO=".
SUDO := $(shell echo "sudo -E" 2> /dev/null)

## Possible values for target platforms: linux, darwin, android, freebsd.
TARGET_PLATFORMS :=linux darwin

## Architectures like: amd64, 386, arm ...etc.
TARGET_ARCHS :=amd64

## Should build for other OSs/Architectures or not.
CROSS_BUILD := false
## If true, disable optimizations and does NOT strip the binary.
DEBUG := false
## If true, "build" will produce a static binary (cross compile always produce static build regardless).
STATIC := true

## Set an output prefix, which is the local directory if not specified.
BINARY_PATH_PREFIX := $(CURDIR)
BINARY_PATH := ${BINARY_PATH_PREFIX}/bin
## Base path used to install.
INSTALLATION_BASE_PATH := /usr/local/bin

# Tests
## The number of parallel tests.
PARALLEL_TESTS=8
## Test timeout.
TEST_TIMEOUT := 8m

# Coverage tests
## Set coverage mode {atomic|count|set}.
COVERAGE_MODE := count
## Set coverage path.
COVERAGE_PATH := ./coverage
COVERAGE_PROFILE := $(COVERAGE_PATH)/profile.out
COVERAGE_HTML := $(COVERAGE_PATH)/index.html
COVERAGE_XML := $(COVERAGE_PATH)/profile.xml

# Docker configurations
## Should build in container or locally.
BUILD_IN_CONTAINER := false
## Docker build flags.
DOCKER_BUILD_FLAGS := --force-rm --rm --no-cache --pull
## Docker file path.
DOCKER_FILE := Dockerfile-proxy
## Docker build tag.
DOCKER_TAG := latest
## The name of the user that this Makefile should produce image artifacts for.
DOCKERHUB_NAMESPACE := $(USER)
## Registry repository.
REGISTRY_REPO := $(DOCKERHUB_NAMESPACE)/foo-protocol-proxy

define getDependency
	$(GO) get -u $(GO_FLAGS) $(1) 2>&1;
endef

define FOO_PROTOCOL_PROXY

    ______               ____             __                   __   ____
   / ____/___  ____     / __ \_________  / /_____  _________  / /  / __ \_________  _  ____  __
  / /_  / __ \/ __ \   / /_/ / ___/ __ \/ __/ __ \/ ___/ __ \/ /  / /_/ / ___/ __ \| |/_/ / / /
 / __/ / /_/ / /_/ /  / ____/ /  / /_/ / /_/ /_/ / /__/ /_/ / /  / ____/ /  / /_/ />  </ /_/ /
/_/    \____/\____/  /_/   /_/   \____/\__/\____/\___/\____/_/  /_/   /_/   \____/_/|_|\__, /
                                                                                      /____/

endef
export FOO_PROTOCOL_PROXY
